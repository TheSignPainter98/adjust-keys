#!/usr/bin/python3

from functools import reduce
from log import die
from os.path import exists
from util import concat, list_diff, safe_get
from sys import exit, argv


def main(args: [str]) -> int:
    if len(args) < 2:
        die('Please give at least one argument, got %s' %(len(args) - 1))

    toExplore:[str] = [args[1] if not args[1].endswith('.py') else args[1][:-3]]
    seen:[str] = []
    while toExplore != []:
        seen = list(set(seen + toExplore))
        newDeps:[str] = list(set(list(reduce(concat, list(map(get_deps, toExplore)), []))))
        toExplore = list_diff(newDeps, seen)
    print(' '.join(list(map(lambda d: d+'.py', list(filter(lambda d: exists(d+'.py'), seen))))))

    return 0


def get_deps(mod: str) -> [str]:
    fname: str = mod + '.py'
    code: [str]
    if exists(fname):
        with open(fname, 'r') as i:
            code = i.readlines()
    else:
        return []

    import_lines: [str] = list(
        filter(
            lambda l: safe_get(l, 0) == 'import' or safe_get(l, 2) == 'import',
            list(map(lambda l: l.split(' '), code))))
    return list(map(lambda l: l[1], import_lines))


if __name__ == '__main__':
    exit(main(argv))
